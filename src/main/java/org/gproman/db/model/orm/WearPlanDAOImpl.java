/*
 * This java source file is generated by DAO4J v1.18
 * Generated on Fri Jan 04 20:55:23 EST 2013
 * For more information, please contact b-i-d@163.com
 * Please check http://members.lycos.co.uk/dao4j/ for the latest version.
 */

package org.gproman.db.model.orm;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import org.gproman.db.model.dao.IdGeneratorDAO;
import org.gproman.db.model.dao.WearPlanDAO;
import org.gproman.model.car.WearPlan;

/**
 * This class provides methods to populate DB Table of WEAR_COEFS
 */
public class WearPlanDAOImpl
        implements
        WearPlanDAO {

    public static final WearPlanDAO INSTANCE   = new WearPlanDAOImpl();

    /* SQL to insert data */
    private static final String     SQL_INSERT =
                                                       "INSERT INTO WEAR_PLAN ("
                                                               + "ID, NAME, SEASON, RACE, PLAN"
                                                               + ") VALUES (?, ?, ?, ?, ?)";

    /* SQL to select data */
    private static final String     SQL_SELECT =
                                                       "SELECT "
                                                               + "ID, NAME, SEASON, RACE, PLAN "
                                                               + "FROM WEAR_PLAN WHERE "
                                                               + "ID = ?";

    /* SQL to select data */
    private static final String     SQL_SELECT_ALL =
                                                       "SELECT "
                                                               + "ID, NAME, SEASON, RACE, PLAN "
                                                               + "FROM WEAR_PLAN ORDER BY SEASON, RACE";

    /* SQL to update data */
    private static final String     SQL_UPDATE =
                                                       "UPDATE WEAR_PLAN SET "
                                                               + "NAME = ?, SEASON = ?, RACE = ?, PLAN = ? "
                                                               + "WHERE "
                                                               + "ID = ?";

    /* SQL to delete data */
    private static final String     SQL_DELETE =
                                                       "DELETE FROM WEAR_PLAN WHERE "
                                                               + "ID = ?";

    private WearPlanDAOImpl() {
    }

    /**
     * Create a new record in Database.
     * @param bean   The Object to be inserted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void create(WearPlan bean,
                       Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            bean.setId( IdGeneratorDAO.INSTANCE.getNextId( conn ) );
            ps = conn.prepareStatement( SQL_INSERT );
            ps.setInt( 1, bean.getId() );
            ps.setString( 2, bean.getName() );
            ps.setInt( 3, bean.getSeason() );
            ps.setInt( 4, bean.getRace() );
            ps.setString( 5, bean.getPlan() );
            ps.executeUpdate();
        } catch ( Exception e ) {
            throw new SQLException( "Error saving wear plan", e );
        } finally {
            close( ps );
        }
    }

    /**
     * Retrieve a record from Database.
     * @param beanKey   The PK Object to be retrieved.
     * @param conn      JDBC Connection.
     * @exception       SQLException if something is wrong.
     */
    public WearPlan load(Integer key,
                         Connection conn) throws SQLException {
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            ps = conn.prepareStatement( SQL_SELECT );
            ps.setInt( 1, key );
            rs = ps.executeQuery();
            List<WearPlan> results = getResults( rs );
            if ( results.size() > 0 ) return (WearPlan) results.get( 0 );
            else return null;
        } finally {
            close( rs );
            close( ps );
        }
    }
    
    @Override
    public List<WearPlan> loadAllPlans(Connection conn) throws SQLException {
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            ps = conn.prepareStatement( SQL_SELECT_ALL );
            rs = ps.executeQuery();
            return getResults( rs );
        } finally {
            close( rs );
            close( ps );
        }
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public int update(WearPlan bean,
                      Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement( SQL_UPDATE );
            ps.setString( 1, bean.getName() );
            ps.setInt( 2, bean.getSeason() );
            ps.setInt( 3, bean.getRace() );
            ps.setString( 4, bean.getPlan() );
            ps.setInt( 5, bean.getId() );
            return ps.executeUpdate();
        } catch ( Exception e ) {
            throw new SQLException( "Error updating wear plan", e );
        } finally {
            close( ps );
        }
    }

    @Override
    public void createOrUpdate(WearPlan wc,
                               Connection conn) throws SQLException {
        if ( wc.getId() == null || update( wc, conn ) == 0 ) {
            create( wc, conn );
        }
    }

    /**
     * Create a new record in Database.
     * @param bean   The PK Object to be deleted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void delete(Integer key,
                       Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement( SQL_DELETE );
            ps.setInt( 1, key );
            ps.executeUpdate();
        } finally {
            close( ps );
        }
    }

    /**
     * Populate the ResultSet.
     * @param rs     The ResultSet.
     * @return       The Object to retrieve from DB.
     * @exception    SQLException if something is wrong.
     */
    private List<WearPlan> getResults(ResultSet rs) throws SQLException {
        List<WearPlan> results = new ArrayList<WearPlan>();
        while ( rs.next() ) {
            WearPlan bean = new WearPlan();
            bean.setId( rs.getInt( "ID" ) );
            bean.setName( rs.getString( "NAME" ) );
            bean.setSeason( rs.getInt( "SEASON" ) );
            bean.setRace( rs.getInt( "RACE" ) );
            bean.setPlan( rs.getString( "PLAN" ) );
            results.add( bean );
        }
        return results;
    }

    /**
     * Close JDBC Statement.
     * @param stmt  Statement to be closed.
     */
    private void close(Statement stmt) {
        if ( stmt != null ) {
            try {
                stmt.close();
            } catch ( SQLException e ) {
            }
        }
    }

    /**
     * Close JDBC ResultSet.
     * @param rs  ResultSet to be closed.
     */
    private void close(ResultSet rs) {
        if ( rs != null ) {
            try {
                rs.close();
            } catch ( SQLException e ) {
            }
        }
    }
}