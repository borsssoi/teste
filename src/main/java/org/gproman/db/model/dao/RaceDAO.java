/*
 * This java source file is generated by DAO4J v1.18
 * Generated on Fri Jan 04 19:21:50 EST 2013
 * For more information, please contact b-i-d@163.com
 * Please check http://members.lycos.co.uk/dao4j/ for the latest version.
 */

package org.gproman.db.model.dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import org.gproman.model.race.Race;

/**
 * This interface provides methods to populate DB Table of RACE
 */
public interface RaceDAO {
    /**
     * Create a new record in Database.
     * @param bean   The Object to be inserted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void create(Integer seasonId,
                       Race bean,
                       Connection conn) throws SQLException;

    /**
     * Retrive a record from Database.
     * @param beanKey   The PK Object to be retrived.
     * @param conn      JDBC Connection.
     * @exception       SQLException if something is wrong.
     */
    public Race load(Integer raceId,
                     Connection conn) throws SQLException;

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public int update(Integer seasonId, 
                      Race bean,
                      Connection conn) throws SQLException;

    /**
     * Create a new record in Database.
     * @param bean   The PK Object to be deleted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void delete(Integer raceId,
                       Connection conn) throws SQLException;

    public Race loadRaceByNumber(Integer season,
                                 Integer race,
                                 Connection conn) throws SQLException;

    public void createOrUpdate(Integer seasonId,
                               Race race,
                               Connection conn) throws SQLException;

    public List<Race> loadRacesForSeasonById(Integer seasonId,
                                             Connection conn) throws SQLException;

    public List<Race> loadRacesForTelemetry(Integer season, Connection conn) throws SQLException;

    public List<Race> loadRacesForSetup(Integer season, Connection conn) throws SQLException;

    public List<Race> loadRacesForTest(Integer season, Connection conn) throws SQLException;
}