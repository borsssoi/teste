/*
 * This java source file is generated by DAO4J v1.18
 * Generated on Fri Jan 04 19:21:50 EST 2013
 * For more information, please contact b-i-d@163.com
 * Please check http://members.lycos.co.uk/dao4j/ for the latest version.
 */

package org.gproman.db.everest.orm;

import static org.gproman.db.DBUtil.setIntParameter;
import static org.gproman.db.DBUtil.setStringParameter;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import org.gproman.db.DBUtil;
import org.gproman.db.everest.dao.EverestForumTopicDAO;
import org.gproman.model.everest.ForumTopic;
import org.gproman.model.everest.ForumTopic.TopicType;

/**
 * This class provides methods to populate DB Table of TEST_SESSION
 */
public class EverestForumTopicDAOImpl
        implements
        EverestForumTopicDAO {

    public static final EverestForumTopicDAO INSTANCE          = new EverestForumTopicDAOImpl();

    /* SQL to insert data */
    private static final String              SQL_INSERT        =
                                                                       "INSERT INTO FORUM_TOPIC ("
                                                                               + "TYPE, SEASON, RACE, URL "
                                                                               + ") VALUES (?, ?, ?, ?)";

    /* SQL to select data */
    private static final String              SQL_SELECT        =
                                                                       "SELECT "
                                                                               + "ID, TYPE, SEASON, RACE, URL "
                                                                               + "FROM FORUM_TOPIC WHERE "
                                                                               + "ID = ?";

    private static final String              SQL_SELECT_SEASON =
                                                                       "SELECT "
                                                                               + "ID, TYPE, SEASON, RACE, URL "
                                                                               + "FROM FORUM_TOPIC WHERE "
                                                                               + "TYPE = ? AND SEASON = ? AND RACE = ?";
    /* SQL to update data */
    private static final String              SQL_UPDATE        =
                                                                       "UPDATE FORUM_TOPIC SET "
                                                                               + "TYPE = ?, SEASON = ?, RACE = ?, URL = ? "
                                                                               + "WHERE "
                                                                               + "ID = ?";

    /* SQL to delete data */
    private static final String              SQL_DELETE        =
                                                                       "DELETE FROM FORUM_TOPIC WHERE "
                                                                               + "ID = ?";

    private static final String              SQL_DELETE_ALL    =
                                                                       "DELETE FROM FORUM_TOPIC";

    private EverestForumTopicDAOImpl() {
    }

    /**
     * Create a new record in Database.
     * @param td   The Object to be inserted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void create(ForumTopic bean,
            Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            int index = 1;
            ps = conn.prepareStatement(SQL_INSERT);
            setStringParameter(ps, index++, bean.getType().toString());
            setIntParameter(ps, index++, bean.getSeason());
            setIntParameter(ps, index++, bean.getRace());
            setStringParameter(ps, index++, bean.getUrl());
            ps.executeUpdate();

            ResultSet generatedKeys = ps.getGeneratedKeys();
            if (generatedKeys.next()) {
                bean.setId(generatedKeys.getInt(1));
            }
        } finally {
            close(ps);
        }
    }

    /**
     * Retrieve a record from Database.
     * @param beanKey   The PK Object to be retrieved.
     * @param conn      JDBC Connection.
     * @exception       SQLException if something is wrong.
     */
    public ForumTopic load(Integer key,
            Connection conn) throws SQLException {
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            ps = conn.prepareStatement(SQL_SELECT);
            ps.setInt(1, key);
            rs = ps.executeQuery();
            List<ForumTopic> results = getResults(rs, conn);
            if (results.size() > 0)
                return results.get(0);
            else
                return null;
        } finally {
            close(rs);
            close(ps);
        }
    }

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public int update(ForumTopic bean,
            Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ForumTopic saved = loadTopic(bean.getType(), bean.getSeason(), bean.getRace(), conn);
            int result = 0;
            if (saved != null) {
                bean.setId(saved.getId());
                ps = conn.prepareStatement(SQL_UPDATE);
                int index = 1;
                setStringParameter(ps, index++, bean.getType().toString());
                setIntParameter(ps, index++, bean.getSeason());
                setIntParameter(ps, index++, bean.getRace());
                setStringParameter(ps, index++, bean.getUrl());
                setIntParameter(ps, index++, bean.getId());
                result = ps.executeUpdate();
            }
            return result;
        } finally {
            close(ps);
        }
    }

    /**
     * Create a new record in Database.
     * @param bean   The PK Object to be deleted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void delete(Integer key,
            Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement(SQL_DELETE);
            ps.setInt(1, key);
            ps.executeUpdate();
        } finally {
            close(ps);
        }
    }

    /**
     * Create a new record in Database.
     * @param bean   The PK Object to be deleted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void deleteAll(Connection conn) throws SQLException {
        PreparedStatement ps = null;
        try {
            ps = conn.prepareStatement(SQL_DELETE_ALL);
            ps.executeUpdate();
        } finally {
            close(ps);
        }
    }

    /**
     * Populate the ResultSet.
     * @param rs     The ResultSet.
     * @return       The Object to retrieve from DB.
     * @exception    SQLException if something is wrong.
     */
    private List<ForumTopic> getResults(ResultSet rs,
            Connection conn) throws SQLException {
        List<ForumTopic> results = new ArrayList<ForumTopic>();
        while (rs.next()) {
            ForumTopic bean = new ForumTopic();
            bean.setId(rs.getInt("ID"));
            bean.setType(TopicType.valueOf(rs.getString("TYPE")));
            bean.setSeason(DBUtil.getIntOrNull(rs, "SEASON"));
            bean.setRace(DBUtil.getIntOrNull(rs, "RACE"));
            bean.setUrl(rs.getString("URL"));
            results.add(bean);
        }
        return results;
    }

    @Override
    public void createOrUpdate(ForumTopic bean,
            Connection conn) throws SQLException {
        if (update(bean, conn) == 0) {
            create(bean, conn);
        }
    }

    @Override
    public ForumTopic loadTopic(TopicType type, Integer seasonNumber, Integer raceNumber, Connection conn) throws SQLException {
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            ps = conn.prepareStatement(SQL_SELECT_SEASON);
            ps.setString(1, type.toString());
            ps.setInt(2, seasonNumber);
            ps.setInt(3, raceNumber);
            rs = ps.executeQuery();
            List<ForumTopic> results = getResults(rs, conn);
            if (results.size() > 0)
                return results.get(0);
            else
                return null;
        } finally {
            close(rs);
            close(ps);
        }
    }

    /**
     * Close JDBC Statement.
     * @param stmt  Statement to be closed.
     */
    private void close(Statement stmt) {
        if (stmt != null) {
            try {
                stmt.close();
            } catch (SQLException e) {
            }
        }
    }

    /**
     * Close JDBC ResultSet.
     * @param rs  ResultSet to be closed.
     */
    private void close(ResultSet rs) {
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException e) {
            }
        }
    }

}